# Documentation: https://openwebinars.net/blog/infraestructura-lamp-con-docker-compose/
version: "3.1"
services:
    www:
        build: .
        ports: 
            - "${SERVER_PORT}:80"
        volumes:
            - ${SOURCE_DIRECTORY}:/var/www/html
    db:
        image: mysql:8.0
        ports: 
            - "${DDBB_PORT}:3306"
        # commenting the following because it's the default authentication plugin
        # command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            # Commenting regular user so root user will be used in the database
            # MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
        # Host volumes. They create a dependency with the host machine.
            # SQL import path. You can set a .sql file there to import a database on the docker compose running stage.
            #- ${SQL_IMPORT_FILES_PATH}:/docker-entrypoint-initdb.d
            - ${CONFIG_FILES_PATH}:/etc/mysql/conf.d # mysql configuration path
        # Named volume. The data on the host will be managed by docker and not
        # binded to any directory in the host OS. The directory within the container
        # is the one on the right.
            - persistent:/var/lib/mysql
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:5
        ports:
            - ${PHP_MY_ADMIN_PORT}:80
        environment:
            # Commenting regular user so root user will be used in the database
            # MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
volumes:
    persistent: